{#
/**
 * @file
 * Theme override to display a menu.
 *
 * Available variables:
 * - menu_name: The machine name of the menu.
 * - items: A nested list of menu items. Each menu item contains:
 *   - attributes: HTML attributes for the menu item.
 *   - below: The menu item child items.
 *   - title: The menu link title.
 *   - url: The menu link url, instance of \Drupal\Core\Url
 *   - localized_options: Menu link localized options.
 *   - is_expanded: TRUE if the link has visible children within the current
 *     menu tree.
 *   - is_collapsed: TRUE if the link has children within the current menu tree
 *     that are not currently visible.
 */
#}
{% import _self as menus %}
{#
We call a macro which calls itself to render the full tree.
@see https://twig.symfony.com/doc/1.x/tags/macro.html
#}
{{ menus.menu_links(items, attributes, 0, menu_name) }}
{% macro menu_links(items, attributes, menu_level, menu_name) %}
  {% import _self as menus %}
  {% if items %}
    {% set menu_classes = [
      'tw-hidden',
      'lg-tw-flex',
      'lg-tw-flex-grow',
      'lg-tw-justify-end',
      'tw-space-x-10',
      'tw-items-center',
      'madrone-mega-menu-' ~ menu_name|clean_class
    ] %}
    {% set submenu_classes = [
      'tw-grid',
      'tw-col-start-2',
      'tw-col-span-3',
      'tw-grid-cols-3',
      'tw-auto-rows-minmax100',
      'tw-gap-x-20',
      'tw-gap-y-5',
      'tw-mt-10',
    ] %}
    {% set mega_menu_container_classes = [
      'tw-hidden',
      'tw-grid',
      'tw-fixed',
      'tw-grid-cols-5',
      'tw-bg-bucktoothwhite',
      'tw-gap-4',
      'tw-z-10',
      'tw-w-full',
      'tw-h-full',
      'tw-left-0',
      'tw-top-menu',
      'tw-cursor-default',
      'mega-menu',
    ] %}
    {% if menu_level == 0 %}
      <ul {{ attributes.addClass(menu_classes) }}>
    {% else %}
      {# Reset attributes variable. #}
      {% set attributes = attributes.removeClass(menu_classes, mega_menu_container_classes, submenu_classes) %}
      <div {{ attributes.addClass(mega_menu_container_classes) }}>
      {% if menu_level == 1 %}
        <div class="tw-absolute tw-text-neutral-400 tw-col-start-5 tw-mt-5">
          <button class="closeMegaMenu tw-text-2xl tw-cursor-pointer">
            <i class="fa fa-times"></i>
          </button>
        </div>
      {% endif %}
      <ul {{ attributes.removeClass(mega_menu_container_classes).addClass(submenu_classes) }}>
    {% endif %}
    {# Craete variable to store the data-index and increment at the end of the loop. #}
    {% set dataIndex = 0 %}
    {% for item in items %}
      {% if menu_level == 0 %}
        {% set list_item_classes = [
          'tw-font-normal',
          'tw-text-neutral-550',
          'tw-flex',
          'tw-self-stretch',
          'tw-items-center',
          'tw-text-med',
          'tw-whitespace-nowrap',
        ] %}
        {% set link_classes = [
          'tw-no-underline',
          'tw-cursor-pointer',
          'mega-menu-parent'
        ] %}
      {% else %}
        {% set list_item_classes = [
          'tw-font-normal',
          'tw-text-neutral-700',
          'tw-relative',
          'mega-menu-child',
        ] %}
        {% set link_classes = 'tw-no-underline' %}
      {% endif %}
      <li{{ item.attributes.addClass(list_item_classes).setAttribute('data-index', dataIndex) }}>
        {{ link(item.title, item.url, {'class':link_classes}) }}
        {# adding the chevron #}
        {% if menu_level == 0 and item.below %}
          <i class="fas fa-fw fa-caret-down"></i>
        {% endif %}
        {# content description for mega menu items #}
        {% if menu_level == 1 %}
          <p class="tw-text-xxs tw-mt-1 mega-menu-description">
            {{ item.url.options.attributes.title }}
          </p>
        {% endif %}
        {# looks to see if there are child links to the menu item #}
        {% if item.below %}
          {{ menus.menu_links(item.below, attributes, menu_level+1, menu_name) }}
        {% endif %}
      </li>
      {% set dataIndex = dataIndex + 1 %}
    {% endfor %}
    {% if menu_level != 0 %}
      </ul>
      </div>
    {% else %}
      </ul>
    {% endif %}
  {% endif %}
{% endmacro %}
